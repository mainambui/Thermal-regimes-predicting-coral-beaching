##Workspace associated with this code is on the cloudbuster - university of Queensland R Studio Server
library(sdm)
library(lme4)
library(MuMIn)
library(corrplot)
library(raster)
library(rgdal)
library(rgeos)
library(ttutils)
library(parallel)

source('RScripts/paperZeroModelSelectionFunctions.R')

# load preprocessed data
load('~/WaveletBleachingDataPrep_July.RData')

#read in and prepapre ReefBase bleaching records
#observationpointshape.csv=file with unduplicted coordinates
bl<-read.csv('observationpointshape.csv')
CoralBleach_Extr<-extract(all.var, bl[,c(6,5)])
CoralBleach_Extr<-data.frame(cbind(bl,CoralBleach_Extr))
CoralBleach_pa<-subset(CoralBleach_Extr, Severity_lev %in% c(0,3))
CoralBleach_pa$Severity_lev[CoralBleach_pa$Severity_lev == 3] <- 1
CoralBleach_pa  <-  CoralBleach_pa[complete.cases(CoralBleach_pa), ] ##all datas
levels(CoralBleach_pa$Ocean)<-as.factor(c("2", "1"))

# prepare predictor dataframe
predictorsVif        <-  data.frame(CoralBleach_pa[,c(13:24,29:42,47:50)])
predictorsVifCalc    <-  predictorsVif

#  check that the response variable is contained within the response data.frame
varsToAdd  <-  c('Severity_lev', 'Year', 'Ecoreg_sal', 'Ocean')
for(j in seq_along(varsToAdd))
  predictorsVifCalc[[varsToAdd[j]]]  <-  checkNewVarAndAdd(originalData=CoralBleach_pa, targetData=predictorsVifCalc, newVar=varsToAdd[j])
rm(j, varsToAdd)

# write to output folder, but ensure it exists first
output  <-  file.path('output', 'data')
dir.create(output, recursive=TRUE, showWarnings = FALSE)

## 2. create output table for model predictors
predictorsUsed  <-  data.frame()

## 3. Create list to store best models
bestModelsvif  <-  list()

## 4. Start counter
n  <-  0

## 5. Create list with all possible combinations between chosen predictors  
  vifPredCombinations  <-  list()
  varnames<-colnames(predictorsVif)
  
  maxCombs  <-  getMaximumNOfCombs(varnames)
  for(j in 1:maxCombs) {
    vifPredCombinations  <-  append(runPredCombinations(j, varnames), vifPredCombinations)
  }
  
##Run each of the combinations in the list above through through vif
vifPredCombinations_new<- c()
for(con in vifPredCombinations){
  r <- subset(predictorsVif, select = con)
  if(length(con)<2){
    vifPredCombinations_new <- c(vifPredCombinations_new, list(con))
  }else{
    if(max(vif(r)["VIF"])> 1.5){
      next
    }else{
      vifPredCombinations_new <- c(vifPredCombinations_new, list(con))
    }
  }
}
## 3. Run all models following this combination (random is set to TRUE by default)
# for fixed-effect models without ocean run lapply(vifPredCombinations, runModelText, random=FALSE)

modelList  <-  lapply(vifPredCombinations_new, runModelText) 

## 4. Model selection step
##Model selection including over dispersion, AUC
#modelListAllVarComb is from 4vars.R and consists of 1,2,3,4 combination variables
#modelListSelection  <-  model.sel(modelListAllVarComb, extra= c(OvDispPval = function(x) overdisp_fun(x)[[4]]))

modelListSelection<-model.sel(modelListAllVarComb, beta="partial.sd", extra= c(OvDispPval = function(x) overdisp_fun(x)[[4]], auc = function(x) roc(predictorsVifCalc$Severity_lev, predict(x))[[9]][1:1]))
write.csv(data.frame(modelListSelection), "AllTopModels_vifPrior.csv", row.names=TRUE)##coefficients are standardized
nonDispersedModels<- get.models(modelListSelection, c(OvDispPval<=0.1)  
AucSelectModels<- get.models(modelListSelection, auc>=0.85)  
predMapVif=predict(object=all.var.reef, model=models_ave, re.form=~(1|Ocean), type='response', progress="text", format="GTiff")                                

nonDispersedModels  <-  model.sel(nonDispersedModels, extra= c(OvDispPval = function(x) overdisp_fun(x)[[4]], auc = function(x) roc(predictorsVifCalc$Severity_lev, predict(x))[[9]][1:1]))
write.csv(nonDispersedModels, "AllTopModelsVifPriorNonDisp.csv", row.names=TRUE)
  
#save.image("ModelListSelection_glmerOceanRandom_vifPrior_allComb.RData")


