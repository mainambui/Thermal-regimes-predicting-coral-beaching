evalTextModel  <-  function(modelText, ...) {
  theMod <- try(eval(parse(text = modelText)))
  
  tryErrorCheck  <-  all(class(theMod) %in% 'try-error')
  if(!tryErrorCheck)
    theMod
}

checkNewVarAndAdd <-  function(originalData, targetData, newVar) {
  responseAndPredictorCheck  <-  sizesMatch(originalData, targetData)
  newVarNameDoesNotExist     <-  !(newVar %in% names(targetData))
  
  if(responseAndPredictorCheck & newVarNameDoesNotExist)
    originalData[[newVar]]
}

sizesMatch  <-  function(originalData, targetData) {
  nrow(originalData) == nrow(targetData)
}

runPredCombinations  <-  function(x, vec) {
  lapply(data.frame(combn(vec, x), stringsAsFactors=FALSE), identity)
}

prepareModelText  <-  function(Predictors, random=TRUE) {
  fixStep   <-  paste0(Predictors, collapse='+')##changed to interactions
  ranStep1  <-  paste0('(0+', Predictors, '|Year)' ,  collapse='+')
  ranStep2  <-  paste0('(0+', Predictors, '|Ocean)' , collapse='+')    
  if(random) {
    paste0('glmer(Severity_lev ~ 1 + ', fixStep, ' + (1|Year) + (1|Ocean) + ', ranStep1, '+', ranStep2, ', data=predictorsVifCalc, family=binomial, na.action = "na.fail")')
  } else {
    paste0('glmer(Severity_lev ~ Ocean + ', fixStep, ' + (1|Year) + ', ranStep1, ', data=predictorsVifCalc, family=binomial, na.action = "na.fail")')
  }
}

runModelText  <-  function(...) {
  modelText  <-  prepareModelText(...)
  evalTextModel(modelText)
}
#getMaximumNOfCombs  <-  function(vecOfPredictors, combCeiling=3)##here adjust the number of variable combinations for fixed effects
getMaximumNOfCombs  <-  function(vecOfPredictors, combCeiling=4) {
  if(length(vecOfPredictors) >= combCeiling) {
    combCeiling
  } else {
    length(vecOfPredictors)
  }
}

##correlation matrix and table
corstarsl <- function(x){ 
  require(Hmisc) 
  require(xtable)
  x <- as.matrix(x) 
  R <- rcorr(x)$r 
  p <- rcorr(x)$P 

  ## define notions for significance levels; spacing is important.
  mystars <- ifelse(p < .001, "***", ifelse(p < .01, "** ", ifelse(p < .05, "* ", " ")))
  
  ## trunctuate the matrix that holds the correlations to two decimal
  R <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1] 
  
  ## build a new matrix that includes the correlations with their apropriate stars 
  Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(x)) 
  diag(Rnew) <- paste(diag(R), " ", sep="") 
  rownames(Rnew) <- colnames(x) 
  colnames(Rnew) <- paste(colnames(x), "", sep="") 
  
  ## remove upper triangle
  Rnew <- as.matrix(Rnew)
  Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
  Rnew <- as.data.frame(Rnew) 
  
  ## remove last column and return the matrix (which is now a data frame)
  Rnew <- cbind(Rnew[1:length(Rnew)-1])
  return(Rnew) 
} 


